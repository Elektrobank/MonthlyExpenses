@model MonthlyBills.Models.YearSummaryViewModel
@using MonthlyBills.Models
@using Newtonsoft.Json;

@{
    ViewBag.Title = Model.Year + " Yearly Expenses";
    var firstDayOfMonth = new DateTime(DateTime.Today.Year, DateTime.Today.Month, 1);
    string categoryListJson = JsonConvert.SerializeObject(Model.Expenses.Select(x => new { x.Name, x.Category, x.DueDate }).Distinct().ToList(), Formatting.Indented);

}
<script type="text/javascript"> 
    function updateFields() {
        var name = document.getElementById('name').value;
        var categoryList = (@Html.Raw(categoryListJson));
        for (var c in categoryList) {
            if (categoryList[c].Name == name) {
                document.getElementById('category').value = categoryList[c].Category;
                document.getElementById('dueDate').value = categoryList[c].DueDate;
            }
        }

    }

</script>

<h3>Monthly Expenses</h3>
<div class="btn-group btn-group-sm">
    <a class="btn btn-default" href="/MonthlyBills/YearSummary/@(Model.Year - 1)"><span class="fa fa-chevron-left"></span></a>
    <button type="button" class="btn btn-default">@Model.Year</button>
    <a class="btn btn-default" href="/MonthlyBills/YearSummary/@(Model.Year + 1)"><span class="fa fa-chevron-right"></span></a>
</div>

<br />
<br />
<table class="table table-striped">
    <thead>
        <tr>
            <th style="border-right: 2px solid #dee2e6">Expense (dd)</th>
            @foreach (var month in Model.Months)
            {
                <th style="width: 95px">@month</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Expenses.OrderBy(x => x.DueDate))
            {
                var count = item.MonthlyAmountPaid.Count();
                if (count < 12)
                {
                    for (var i = 0; i < (12 - count); i++)
                    {
                        var defaultAmount = new AmountPaid { Amount = 0, Date = new DateTime(Model.Year, 12, 31) };
                        item.MonthlyAmountPaid.Add(defaultAmount);
                    }
                }

                <tr>
                    <td style="white-space:nowrap; border-right: 2px solid #dee2e6">@item.Name (@item.DueDate)</td>

                    @for (var i = 0; i < 12; i++)
                    {
                        if (i >= count)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td>@item.MonthlyAmountPaid[i].Amount.ToString("C2")</td>
                        }
                    }
                </tr>
        }
    </tbody>
</table>
<hr />
<h3>Update Expense</h3>
<form action="/MonthlyBills/Update" method="post">
    <div class="form-group">
        <label for="name">Name</label>
        <select class="form-control" name="name" id="name" onchange="updateFields()">
            @{ var names = Model.Expenses.Select(x => x.Name).Distinct().ToList(); }
            @foreach (var name in names)
            {
                <option>@name</option>
            }
            <option class="fa-italic">ADD NEW</option>
        </select>
    </div>
    <div class="form-group">
        <label for="date">Date</label>
        <input type="date" class="form-control" name="date" id="date" value=@firstDayOfMonth.ToString("yyyy-MM-dd") />
    </div>
    <div class="form-group">
        <label for="dueDate">Due On</label>
        <input type="number" class="form-control" name="dueDate" id="dueDate" value="8" />
    </div>
    <div class="form-group">
        <label for="category">Category</label>
        <select class="form-control" name="category" id="category">
            @{ var categories = Model.Expenses.Select(x => x.Category).Distinct().ToList(); }
            @foreach (var category in categories)
            {
                <option>@category</option>
            }
            <option class="fa-italic">ADD NEW</option>
        </select>
    </div>
    <div class="form-group">
        <label for="cost">Cost</label>
        <input type="number" step="0.01" class="form-control" name="cost" id="cost" placeholder="Enter Cost" />
    </div>
    <button type="submit" class="btn btn-success" value="Submit">Add/Update</button>
    <button type="" class="btn btn-danger" value="">Delete</button>
</form>

<div id="hook">

</div>



