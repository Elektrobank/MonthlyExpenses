@model MonthlyBills.Models.YearSummaryViewModel
@using MonthlyBills.Models
@using Newtonsoft.Json;
@using MonthlyBills;

@{
    ViewBag.Title = Model.Year + " Yearly Expenses";
    var firstDayOfMonth = new DateTime(DateTime.Today.Year, DateTime.Today.Month, 1);
    string categoryListJson = JsonConvert.SerializeObject(Model.Expenses.Select(x => new { x.Name, x.Category, x.DueDate }).Distinct().ToList(), Formatting.Indented);

}

@section Scripts {
    <script type="text/javascript">

        function updateFields() {
            var name = document.getElementById('name').value;
            var categoryList = (@Html.Raw(categoryListJson));
            for (var c in categoryList) {
                if (categoryList[c].Name == name) {
                    document.getElementById('category').value = categoryList[c].Category;
                    document.getElementById('dueDate').value = categoryList[c].DueDate;
                }
            }
        }

        //updates text fields based on default window load values
        window.onload = function() {
            var name = document.getElementById('name');
            var category = document.getElementById('category');

            var nameAnchors = document.getElementById('nameDropdown').getElementsByTagName('a');
            var categoryAnchors = document.getElementById('categoryDropdown').getElementsByTagName('a');

            for (var i = 0; i < nameAnchors.length; i++) {
                var anchor = nameAnchors[i];
                anchor.onclick = function() {
                    name.value = (this.text);
                    updateFields();
                }
            }

            for (var i = 0; i < categoryAnchors.length; i++) {
                var anchor = categoryAnchors[i];
                anchor.onclick = function () {
                    category.value = (this.text);
                }
            }
        }

    </script>
}
<row>
    <h3>
        Monthly Expenses
        <span class="btn-group btn-group">
            @if (Model.Year > 2008)
            {
                <a class="btn btn-outline-secondary" href="@Url.Action("YearSummary", new { year = Model.Year - 1})"><span style="color:gray" class="fa fa-chevron-left fa-2x"></span></a>
            }
            <button class="btn btn-outline-secondary active">@Model.Year</button>
            @if (Model.Year < DateTime.Today.Year)
            {
                <a class="btn btn-outline-secondary" href="@Url.Action("YearSummary", new { year = Model.Year + 1})"><span style="color:gray" class="fa fa-chevron-right fa-2x"></span></a>
            }
        </span>
    </h3>
</row> 
<br />
<table class="table table-striped">
    <thead>
        <tr>
            <th class="text-center" style="border-right: 2px solid #dee2e6">Expense (due on)</th>
            <th class="text-center" style="border-right: 2px solid #dee2e6; width: 8%">YTD</th>
            @foreach (var month in Enum.GetValues(typeof(Global.Months)))
            {
                <th class="text-center" style="width: 6.5%">@month</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Expenses.OrderBy(x => x.DueDate))
        {
            <tr>
                <td style="white-space:nowrap; border-right: 2px solid #dee2e6"><span class="@item.Icon"></span> @item.Name (@item.DueDate) <span class = "@(item.AutoPay ? "fa fa-refresh" : ""  )"></span></td>
                <td class="text-center align-middle" style="white-space:nowrap; border-right: 2px solid #dee2e6">@item.MonthlyAmountPaid.Select(u => u.Amount).Sum().ToString("C2")</td>
                @foreach (int month in Enum.GetValues(typeof(Global.Months)))
                {
                    if (item.MonthlyAmountPaid.Where(u => u.Date.Month == month).Any())
                    {
                        <td class="text-center align-middle">@item.MonthlyAmountPaid.Where(u => u.Date.Month == month).Select(u => u.Amount).FirstOrDefault().ToString("C2")</td>
                    }
                    else
                    {
                        <td></td>
                    }
                }
            </tr>
        }
    </tbody>
</table>
<hr />

<h3>Update Expense</h3>
<form action="/MonthlyBills/Update" method="post">
    <div class="form-group">
        <label for="name">Name</label>
        <div class="input-group">
            <input type="text" class="form-control" name="name" id="name" onchange="updateFields()">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Select </button>
                <div class="dropdown-menu" id="nameDropdown">
                    @{ var names = Model.Expenses.Select(x => x.Name).Distinct().ToList(); }
                    @foreach (var name in names)
                    {
                        <a class="dropdown-item">@name</a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label for="date">Date</label>
        <input type="date" class="form-control" name="date" id="date" value=@firstDayOfMonth.ToString("yyyy-MM-dd") />
    </div>
    <div class="form-group">
        <label for="dueDate">Due On</label>
        <input type="number" class="form-control" name="dueDate" id="dueDate" value="" />
    </div>
    <div class="form-group">
        <label for="category">Category</label>
        <div class="input-group">
            <input type="text" class="form-control" name="category" id="category">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Select </button>
                <div class="dropdown-menu" id="categoryDropdown">
                    @{ var categories = Model.Expenses.Select(x => x.Category).Distinct().ToList(); }
                    @foreach (var category in categories)
                    {
                        <a id="testDrop" class="dropdown-item">@category</a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label for="amount">Amount</label>
        <input type="number" step="0.01" class="form-control" name="amount" id="amount" placeholder="Enter Amount" />
    </div>
    <button type="submit" class="btn btn-success" value="Submit">Add/Update</button>
    <button type="" class="btn btn-danger" value="">Delete</button>

</form>

